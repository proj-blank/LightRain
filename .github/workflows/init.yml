name: Init Indian MicroCap Project

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Detect default branch
        id: branch
        run: |
          DEFAULT_BRANCH=$(git remote show origin | sed -n '/HEAD branch/s/.*: //p')
          echo "branch=$DEFAULT_BRANCH" >> $GITHUB_OUTPUT

      - name: Set up project files
        run: |
          mkdir -p indian-microcap-analysis notebooks

          cat > indian-microcap-analysis/README.md << 'EOF'
          # Indian MicroCap Analysis

          This project analyzes Indian microcap stocks (market cap < â‚¹5,000 Cr) and
          generates trading signals using fundamental and technical filters.

          ## Features
          - Fetch NSE/BSE stock data
          - Filter by market cap
          - Apply technical indicators (SMA, RSI, MACD)
          - Generate buy/sell/hold signals
          - Backtesting framework (future work)

          ## Usage
          ```bash
          pip install -r requirements.txt
          python main.py
          ```
          EOF

          cat > indian-microcap-analysis/requirements.txt << 'EOF'
          pandas
          numpy
          matplotlib
          yfinance
          nsetools
          jupyter
          EOF

          cat > indian-microcap-analysis/data_fetch.py << 'EOF'
          import pandas as pd
          from nsetools import Nse

          nse = Nse()

          def get_stock_info(symbol: str):
              """Fetch stock quote from NSE"""
              return nse.get_quote(symbol)

          def get_all_stock_codes():
              """Fetch list of all NSE stock codes"""
              return list(nse.get_stock_codes().keys())[1:]  # skip header
          EOF

          cat > indian-microcap-analysis/analysis.py << 'EOF'
          import pandas as pd

          def filter_microcaps(data, cap_limit=5000):
              """Filter stocks with market cap below given Cr limit"""
              return data[data['marketCap'] < cap_limit]
          EOF

          cat > indian-microcap-analysis/strategy.py << 'EOF'
          import pandas as pd

          def simple_strategy(df):
              """Example: Buy if last close > 50-day SMA"""
              df['SMA50'] = df['Close'].rolling(50).mean()
              signal = "BUY" if df['Close'].iloc[-1] > df['SMA50'].iloc[-1] else "SELL"
              return signal
          EOF

          cat > indian-microcap-analysis/main.py << 'EOF'
          from data_fetch import get_stock_info, get_all_stock_codes
          from analysis import filter_microcaps
          from strategy import simple_strategy

          def main():
              print("Fetching NSE stock list...")
              codes = get_all_stock_codes()[:20]  # demo: first 20 stocks
              data = []

              for code in codes:
                  try:
                      info = get_stock_info(code)
                      if info:
                          data.append({
                              "symbol": code,
                              "marketCap": info.get("marketCap", 0)
                          })
                  except Exception as e:
                      print(f"Error fetching {code}: {e}")

              import pandas as pd
              df = pd.DataFrame(data)

              print("Filtering microcaps...")
              microcaps = filter_microcaps(df)
              print(microcaps.head())

          if __name__ == "__main__":
              main()
          EOF

          cat > notebooks/microcap_demo.ipynb << 'EOF'
          {
           "cells": [
            {
             "cell_type": "markdown",
             "metadata": {},
             "source": [
              "# MicroCap Demo Notebook\\n",
              "\\n",
              "This notebook demonstrates fetching NSE stock data, filtering microcaps, and applying a simple strategy."
             ]
            },
            {
             "cell_type": "code",
             "execution_count": null,
             "metadata": {},
             "outputs": [],
             "source": [
              "from indian-microcap-analysis.data_fetch import get_all_stock_codes, get_stock_info\\n",
              "from indian-microcap-analysis.analysis import filter_microcaps\\n",
              "import pandas as pd\\n",
              "\\n",
              "codes = get_all_stock_codes()[:10]\\n",
              "data = []\\n",
              "for code in codes:\\n",
              "    try:\\n",
              "        info = get_stock_info(code)\\n",
              "        if info:\\n",
              "            data.append({\\n",
              "                'symbol': code,\\n",
              "                'marketCap': info.get('marketCap', 0)\\n",
              "            })\\n",
              "    except Exception as e:\\n",
              "        print(f'Error fetching {code}: {e}')\\n",
              "\\n",
              "df = pd.DataFrame(data)\\n",
              "microcaps = filter_microcaps(df)\\n",
              "microcaps"
             ]
            }
           ],
           "metadata": {
            "kernelspec": {
             "display_name": "Python 3",
             "language": "python",
             "name": "python3"
            },
            "language_info": {
             "name": "python"
            }
           },
           "nbformat": 4,
           "nbformat_minor": 5
          }
          EOF
      
      - name: Commit and Push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "Initialize project" || echo "No changes to commit"
          git push origin HEAD:main

